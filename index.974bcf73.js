var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},r={},o=e.parcelRequire8bbc;null==o&&((o=function(e){if(e in t)return t[e].exports;if(e in r){var o=r[e];delete r[e];var s={id:e,exports:{}};return t[e]=s,o.call(s.exports,s,s.exports),s.exports}var a=Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}).register=function(e,t){r[e]=t},e.parcelRequire8bbc=o),(0,o.register)("XBdqf",function(e,t){Object.defineProperty(e.exports,"Chatroom",{get:function(){return r},set:void 0,enumerable:!0,configurable:!0});class r{constructor(e,t){this.room=e,this.username=t,this.chats=db.collection("chats"),this.unsubscribe}async addChat(e){let t=new Date,r={message:e,username:this.username,room:this.room,created_at:firebase.firestore.Timestamp.fromDate(t)};return await this.chats.add(r)}getChats(e){this.unsubscribe=this.chats.where("room","==",this.room).orderBy("created_at").onSnapshot(t=>{t.docChanges().forEach(t=>{"added"===t.type&&e(t.doc.data())})})}updateName(e){this.username=e}updateRoom(e){this.room=e,console.log("room updated!"),this.unsubscribe&&this.unsubscribe()}}}),o("XBdqf");
//# sourceMappingURL=index.974bcf73.js.map
